# 이차원 리스트 - 리스트 내부에 리스트 있음
# matrix - 행, 열로 이루어짐

d = [
    [10, 20],
    [30, 40],
    [50, 60],
]

print(d)
print(type(d))

# 인덱싱 - 요소 접근(조회)
print(d[0][0]) #0행, 0열 - 10 출력
print(d[0][1]) #0행, 1열 - 20 출력
print(d[1][0]) #1행, 0열 - 30 출력
print(d[1][1]) #1행, 1열 - 40 출력
print(d[2][0]) #2행, 0열 - 50 출력
print(d[2][1]) #2행, 1열 - 60 출력

# 요소 추가
d.append([70, 80])
print(d)

# 요소 수정
d[0][0] = 90
d[0][1] = 100
print(d)

'''# 요소 삭제 - 행을 먼저 선택 후 열을 선택해야 한다.
d[1].pop(1) # 행을 먼저 찾는다. 그 후에 열을 선택해 주면 된다.
print(d)'''


'''# 리스트의 크기
a = [1, 2, 3]
for i in range(len(a)):
    print()'''

# 전체 조회
print(len(d))
print(f'리스트(행)의 크기: {len(d)}')
print(f'리스트(열)의 크기: {len(d[0])}')
print(f'리스트(열)의 크기: {len(d[1])}')

'''
# 열의 구조(개수)가 맞다는 것 - [10,20],[30,40],[50,60]
# for in 리스트 - 열의 구조(개수)가 맞지 않을때 사용한다.
for i in range(len(d)):
    for j in range(len(d[i])):
        print(d[i][j], end=" ")
    print()
'''

# for in 리스트 - 열의 구조(개수)가 맞아야 사용가능하기 때문에 주의해야한다.
# 열의 구조(개수)가 맞지 않을 때 - [10,20],[30],[50,60,70]
for x,y in d:
    print(x,y)
